name: Deploy

on:
  push:
    branches:
     - master

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: 14.x # used for installing the serverless-python-requirements dependency from NPM
    strategy:
      matrix:
        python-version:
          - 3.8 # with a build matrix, you can specify a list of python versions to deploy with
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v2
        with:
          # This path is specific to Ubuntu
          path: ~/.cache/pip
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: npm install
        env:
          CI: true
        run: |
          #npm ci

      - name: deploy
        run: |
          npx ncc build index.py
          zip -j deploy.zip ./dist/*
          aws lambda update-function-code --function-name=github-to-lambda --zip-file=fileb://deploy.zip